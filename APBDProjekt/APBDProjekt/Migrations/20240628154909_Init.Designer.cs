// <auto-generated />
using System;
using APBDProjekt.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APBDProjekt.Migrations
{
    [DbContext(typeof(SoftwareDistributionDbContext))]
    [Migration("20240628154909_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APBDProjekt.Entities.AppUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("RefreshTokenExp")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("User_pk");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUser", (string)null);
                });

            modelBuilder.Entity("APBDProjekt.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("Category_pk");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Finance"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Education"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Utility"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Calculation"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "Translation"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "Image manipulation"
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PrivateClientId")
                        .HasColumnType("int");

                    b.HasKey("ClientId")
                        .HasName("Client_pk");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PrivateClientId");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Address = "ul. Chmiel 47c - Zgierz, LU / 65-239",
                            Email = "doe@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "+48 543772365",
                            PrivateClientId = 1
                        },
                        new
                        {
                            ClientId = 2,
                            Address = "ul. Cybulski 81 - Ścinawa, PK / 74-648",
                            Email = "marltom@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "+1 9792862590",
                            PrivateClientId = 2
                        },
                        new
                        {
                            ClientId = 3,
                            Address = "ul. Śliwa 4/1 - Wieruszów, LU / 99-878",
                            Email = "soniaduda@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "+48 852951976",
                            PrivateClientId = 3
                        },
                        new
                        {
                            ClientId = 4,
                            Address = "al. Kostrzewa 270 - Lipiany, LB / 71-013",
                            Email = "tadbaran@gmail.com",
                            IsDeleted = false,
                            PhoneNumber = "+48 904095402",
                            PrivateClientId = 4
                        },
                        new
                        {
                            ClientId = 5,
                            Address = "pl. Szczepański 32c - Jeziorany, KP / 52-673",
                            CompanyId = 1,
                            Email = "dir@cashzo.com",
                            IsDeleted = false,
                            PhoneNumber = "+48 802107161"
                        },
                        new
                        {
                            ClientId = 6,
                            Address = "pl. Turek 05c - Polanów, ZP / 07-186",
                            CompanyId = 2,
                            Email = "info@mathico.com",
                            IsDeleted = false,
                            PhoneNumber = "+48 209770172"
                        },
                        new
                        {
                            ClientId = 7,
                            Address = "42 Ockham Road - East Witton, DL8 8TU",
                            CompanyId = 3,
                            Email = "sales@lingify.uk",
                            IsDeleted = false,
                            PhoneNumber = "+44 7994365813"
                        },
                        new
                        {
                            ClientId = 8,
                            Address = "pl. Molenda 42c - Gdynia, LD / 86-752",
                            CompanyId = 4,
                            Email = "fotofuse@gmail.com",
                            IsDeleted = true,
                            PhoneNumber = "+48 517455585"
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("KRS")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("CompanyId")
                        .HasName("Company_pk");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            KRS = "449188792",
                            Name = "Cashzo"
                        },
                        new
                        {
                            CompanyId = 2,
                            KRS = "109790978",
                            Name = "Mathico"
                        },
                        new
                        {
                            CompanyId = 3,
                            KRS = "66882822454381",
                            Name = "Lingify"
                        },
                        new
                        {
                            CompanyId = 4,
                            KRS = "668021149",
                            Name = "Fotofuse"
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.Configs.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("RoleId")
                        .HasName("AppUser_pk");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Employee"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentCharge")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxCharge")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("SoftwareSystemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearsOfSupport")
                        .HasColumnType("int");

                    b.HasKey("ContractId")
                        .HasName("Contract_pk");

                    b.HasIndex("ClientId");

                    b.HasIndex("SoftwareSystemId");

                    b.ToTable("Contract", (string)null);

                    b.HasData(
                        new
                        {
                            ContractId = 1,
                            ClientId = 1,
                            CurrentCharge = 57000m,
                            EndDate = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = true,
                            MaxCharge = 57000m,
                            SoftwareSystemId = 1,
                            StartDate = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearsOfSupport = 4
                        },
                        new
                        {
                            ContractId = 2,
                            ClientId = 2,
                            CurrentCharge = 0m,
                            EndDate = new DateTime(2021, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            MaxCharge = 18500m,
                            SoftwareSystemId = 2,
                            StartDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearsOfSupport = 2
                        },
                        new
                        {
                            ContractId = 3,
                            ClientId = 2,
                            CurrentCharge = 18500m,
                            EndDate = new DateTime(2021, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = true,
                            MaxCharge = 18500m,
                            SoftwareSystemId = 2,
                            StartDate = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearsOfSupport = 1
                        },
                        new
                        {
                            ContractId = 4,
                            ClientId = 5,
                            CurrentCharge = 4000m,
                            EndDate = new DateTime(2024, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            MaxCharge = 37000m,
                            SoftwareSystemId = 3,
                            StartDate = new DateTime(2024, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearsOfSupport = 3
                        },
                        new
                        {
                            ContractId = 5,
                            ClientId = 7,
                            CurrentCharge = 0m,
                            EndDate = new DateTime(2024, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsSigned = false,
                            MaxCharge = 68000m,
                            SoftwareSystemId = 6,
                            StartDate = new DateTime(2024, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            YearsOfSupport = 4
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Timeslot")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Value")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("DiscountId")
                        .HasName("Discount_pk");

                    b.ToTable("Discount", (string)null);

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            Name = "The beginning of the school year Discount",
                            Offer = "Discount on education systems",
                            Timeslot = "01-08 30-09",
                            Value = 10m
                        },
                        new
                        {
                            DiscountId = 2,
                            Name = "New Year Discount",
                            Offer = "Discount on all systems",
                            Timeslot = "01-01 16-01",
                            Value = 5.5m
                        },
                        new
                        {
                            DiscountId = 3,
                            Name = "Finance February Discount",
                            Offer = "Discount on finance systems",
                            Timeslot = "01-02 25-02",
                            Value = 7.5m
                        },
                        new
                        {
                            DiscountId = 4,
                            Name = "Utility Holiday Discount",
                            Offer = "Discount on utility systems",
                            Timeslot = "01-07 01-09",
                            Value = 12.5m
                        },
                        new
                        {
                            DiscountId = 5,
                            Name = "Calculation Systems Discount",
                            Offer = "Discount on calculation systems",
                            Timeslot = "13-01 14-03",
                            Value = 8.5m
                        },
                        new
                        {
                            DiscountId = 6,
                            Name = "Learning and finance Discount",
                            Offer = "Discount on finance and education systems",
                            Timeslot = "20-02 06-08",
                            Value = 6.5m
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.PrivateClient", b =>
                {
                    b.Property<int>("PrivateClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrivateClientId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("PrivateClientId")
                        .HasName("PrivateClient_pk");

                    b.ToTable("PrivateClient", (string)null);

                    b.HasData(
                        new
                        {
                            PrivateClientId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            PESEL = "89110281190"
                        },
                        new
                        {
                            PrivateClientId = 2,
                            FirstName = "Marlena",
                            LastName = "Tomczyk",
                            PESEL = "43071918403"
                        },
                        new
                        {
                            PrivateClientId = 3,
                            FirstName = "Sonia",
                            LastName = "Duda",
                            PESEL = "76102295729"
                        },
                        new
                        {
                            PrivateClientId = 4,
                            FirstName = "Tadeusz",
                            LastName = "Baran",
                            PESEL = "33110448277"
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.SoftwareSystem", b =>
                {
                    b.Property<int>("SoftwareSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareSystemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("SoftwareSystemId")
                        .HasName("SoftwareSystem_pk");

                    b.ToTable("SoftwareSystem", (string)null);

                    b.HasData(
                        new
                        {
                            SoftwareSystemId = 1,
                            Description = "System to help companies with all financial issues, such as revenue, and to teach inexperienced employees.",
                            Name = "FinanceExpert",
                            Price = 54000m
                        },
                        new
                        {
                            SoftwareSystemId = 2,
                            Description = "System to help students understand difficult mathematical topics.",
                            Name = "MathsHelper",
                            Price = 17500m
                        },
                        new
                        {
                            SoftwareSystemId = 3,
                            Description = "System to help count the paychecks of employees from different departments based on hours worked and other factors.",
                            Name = "WageManager",
                            Price = 35000m
                        },
                        new
                        {
                            SoftwareSystemId = 4,
                            Description = "System that helps calculate very large numbers and complex data.",
                            Name = "Calculator++",
                            Price = 15000m
                        },
                        new
                        {
                            SoftwareSystemId = 5,
                            Description = "System to improve the tasks of the translator. In addition, equipped with a powerful database of words, synonyms, etc.",
                            Name = "TranslatorMax",
                            Price = 44000m
                        },
                        new
                        {
                            SoftwareSystemId = 6,
                            Description = "System to help you transform and enhance your photos with intuitive, professional editing tools.",
                            Name = "PixelPerfect",
                            Price = 65000m
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.SoftwareSystemVersion", b =>
                {
                    b.Property<int>("SoftwareSystemVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareSystemVersionId"));

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareSystemId")
                        .HasColumnType("int");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("SoftwareSystemVersionId")
                        .HasName("SoftwareSystemVersion_pk");

                    b.HasIndex("SoftwareSystemId");

                    b.HasIndex("VersionId");

                    b.ToTable("SoftwareSystem_Version", (string)null);

                    b.HasData(
                        new
                        {
                            SoftwareSystemVersionId = 1,
                            ReleaseDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 1,
                            VersionId = 4
                        },
                        new
                        {
                            SoftwareSystemVersionId = 2,
                            ReleaseDate = new DateTime(2020, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 1,
                            VersionId = 3
                        },
                        new
                        {
                            SoftwareSystemVersionId = 3,
                            ReleaseDate = new DateTime(2023, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 1,
                            VersionId = 2
                        },
                        new
                        {
                            SoftwareSystemVersionId = 4,
                            ReleaseDate = new DateTime(2024, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 1,
                            VersionId = 4
                        },
                        new
                        {
                            SoftwareSystemVersionId = 5,
                            ReleaseDate = new DateTime(2020, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 2,
                            VersionId = 3
                        },
                        new
                        {
                            SoftwareSystemVersionId = 6,
                            ReleaseDate = new DateTime(2024, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 2,
                            VersionId = 2
                        },
                        new
                        {
                            SoftwareSystemVersionId = 8,
                            ReleaseDate = new DateTime(2017, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 3,
                            VersionId = 4
                        },
                        new
                        {
                            SoftwareSystemVersionId = 9,
                            ReleaseDate = new DateTime(2022, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 3,
                            VersionId = 2
                        },
                        new
                        {
                            SoftwareSystemVersionId = 10,
                            ReleaseDate = new DateTime(2015, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 4,
                            VersionId = 6
                        },
                        new
                        {
                            SoftwareSystemVersionId = 11,
                            ReleaseDate = new DateTime(2024, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 4,
                            VersionId = 2
                        },
                        new
                        {
                            SoftwareSystemVersionId = 12,
                            ReleaseDate = new DateTime(2022, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 5,
                            VersionId = 3
                        },
                        new
                        {
                            SoftwareSystemVersionId = 13,
                            ReleaseDate = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 5,
                            VersionId = 2
                        },
                        new
                        {
                            SoftwareSystemVersionId = 14,
                            ReleaseDate = new DateTime(2008, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 6,
                            VersionId = 5
                        },
                        new
                        {
                            SoftwareSystemVersionId = 15,
                            ReleaseDate = new DateTime(2013, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 6,
                            VersionId = 4
                        },
                        new
                        {
                            SoftwareSystemVersionId = 16,
                            ReleaseDate = new DateTime(2019, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 6,
                            VersionId = 3
                        },
                        new
                        {
                            SoftwareSystemVersionId = 17,
                            ReleaseDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoftwareSystemId = 6,
                            VersionId = 2
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.Version", b =>
                {
                    b.Property<int>("VersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VersionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("VersionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VersionId")
                        .HasName("Version_pk");

                    b.ToTable("Version", (string)null);

                    b.HasData(
                        new
                        {
                            VersionId = 1,
                            Name = "1.1",
                            VersionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VersionId = 2,
                            Name = "1.0",
                            VersionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VersionId = 3,
                            Name = "0.9",
                            VersionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VersionId = 4,
                            Name = "0.8",
                            VersionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VersionId = 5,
                            Name = "0.7",
                            VersionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            VersionId = 6,
                            Name = "0.6",
                            VersionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SoftwareSystem_Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareSystemId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "SoftwareSystemId");

                    b.HasIndex("SoftwareSystemId");

                    b.ToTable("SoftwareSystem_Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            SoftwareSystemId = 2
                        },
                        new
                        {
                            CategoryId = 4,
                            SoftwareSystemId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            SoftwareSystemId = 3
                        },
                        new
                        {
                            CategoryId = 3,
                            SoftwareSystemId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            SoftwareSystemId = 4
                        },
                        new
                        {
                            CategoryId = 4,
                            SoftwareSystemId = 4
                        },
                        new
                        {
                            CategoryId = 5,
                            SoftwareSystemId = 5
                        },
                        new
                        {
                            CategoryId = 6,
                            SoftwareSystemId = 6
                        });
                });

            modelBuilder.Entity("SoftwareSystem_Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareSystemId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId", "SoftwareSystemId");

                    b.HasIndex("SoftwareSystemId");

                    b.ToTable("SoftwareSystem_Discount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            DiscountId = 3,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            DiscountId = 5,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            DiscountId = 6,
                            SoftwareSystemId = 1
                        },
                        new
                        {
                            DiscountId = 1,
                            SoftwareSystemId = 2
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemId = 2
                        },
                        new
                        {
                            DiscountId = 5,
                            SoftwareSystemId = 2
                        },
                        new
                        {
                            DiscountId = 6,
                            SoftwareSystemId = 2
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemId = 3
                        },
                        new
                        {
                            DiscountId = 3,
                            SoftwareSystemId = 3
                        },
                        new
                        {
                            DiscountId = 4,
                            SoftwareSystemId = 3
                        },
                        new
                        {
                            DiscountId = 1,
                            SoftwareSystemId = 4
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemId = 4
                        },
                        new
                        {
                            DiscountId = 5,
                            SoftwareSystemId = 4
                        },
                        new
                        {
                            DiscountId = 6,
                            SoftwareSystemId = 4
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemId = 5
                        },
                        new
                        {
                            DiscountId = 2,
                            SoftwareSystemId = 6
                        });
                });

            modelBuilder.Entity("APBDProjekt.Entities.AppUser", b =>
                {
                    b.HasOne("APBDProjekt.Entities.Configs.Role", "Role")
                        .WithMany("AppUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("AppUser_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APBDProjekt.Entities.Client", b =>
                {
                    b.HasOne("APBDProjekt.Entities.Company", "Company")
                        .WithMany("Clients")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("Client_Company");

                    b.HasOne("APBDProjekt.Entities.PrivateClient", "PrivateClient")
                        .WithMany("Clients")
                        .HasForeignKey("PrivateClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("Client_PrivateClient");

                    b.Navigation("Company");

                    b.Navigation("PrivateClient");
                });

            modelBuilder.Entity("APBDProjekt.Entities.Contract", b =>
                {
                    b.HasOne("APBDProjekt.Entities.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Contract_Client");

                    b.HasOne("APBDProjekt.Entities.SoftwareSystem", "SoftwareSystem")
                        .WithMany("Contracts")
                        .HasForeignKey("SoftwareSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Contract_SoftwareSystem");

                    b.Navigation("Client");

                    b.Navigation("SoftwareSystem");
                });

            modelBuilder.Entity("APBDProjekt.Entities.SoftwareSystemVersion", b =>
                {
                    b.HasOne("APBDProjekt.Entities.SoftwareSystem", "SoftwareSystem")
                        .WithMany("SoftwareSystemVersions")
                        .HasForeignKey("SoftwareSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("SoftwareSystemVersion_SoftwareSystem");

                    b.HasOne("APBDProjekt.Entities.Version", "Version")
                        .WithMany("SoftwareSystemVersions")
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("SoftwareSystemVersion_Version");

                    b.Navigation("SoftwareSystem");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("SoftwareSystem_Category", b =>
                {
                    b.HasOne("APBDProjekt.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APBDProjekt.Entities.SoftwareSystem", null)
                        .WithMany()
                        .HasForeignKey("SoftwareSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SoftwareSystem_Discount", b =>
                {
                    b.HasOne("APBDProjekt.Entities.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("APBDProjekt.Entities.SoftwareSystem", null)
                        .WithMany()
                        .HasForeignKey("SoftwareSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("APBDProjekt.Entities.Client", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("APBDProjekt.Entities.Company", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("APBDProjekt.Entities.Configs.Role", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("APBDProjekt.Entities.PrivateClient", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("APBDProjekt.Entities.SoftwareSystem", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("SoftwareSystemVersions");
                });

            modelBuilder.Entity("APBDProjekt.Entities.Version", b =>
                {
                    b.Navigation("SoftwareSystemVersions");
                });
#pragma warning restore 612, 618
        }
    }
}
